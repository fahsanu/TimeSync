# Generated by Django 4.2.5 on 2024-04-19 14:49

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('loc_id', models.AutoField(primary_key=True, serialize=False)),
                ('loc_name', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('default_home', models.BooleanField(default=False)),
                ('default_dest', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('alarm_sound', models.CharField(max_length=100)),
                ('sched_reminder', models.BooleanField(default=True)),
                ('departure_time', models.BooleanField(default=True)),
                ('new_friends', models.BooleanField(default=True)),
                ('wake_up_aids_requests', models.BooleanField(default=True)),
                ('phone_number', models.CharField(max_length=24)),
                ('total_prep_time', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('transportation_mode', models.CharField(choices=[('car', 'Car'), ('motorcycle', 'Motorcycle'), ('bus', 'Bus'), ('metro', 'Metro'), ('walk', 'Walk')], max_length=20)),
                ('extra_prep_time', models.IntegerField()),
                ('note', models.TextField()),
                ('sched_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_locations', to='app.location')),
                ('sched_start', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_locations', to='app.location')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='app.userinfo')),
                ('wake_up_aids', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wake_up_friends', to='app.userinfo')),
            ],
        ),
        migrations.CreateModel(
            name='PrepActivityTime',
            fields=[
                ('prep_activity_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('prep_activity_time', models.IntegerField()),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prep_activities', to='app.userinfo')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='app.userinfo'),
        ),
        migrations.CreateModel(
            name='UserAuth',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
